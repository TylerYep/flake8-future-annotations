[project]
name = "flake8-future-annotations"
version = "1.1.0"
description = "Verifies python 3.8+ files use from __future__ import annotations"
authors = [
    { name = "Tyler Yep", email = "tyep@cs.stanford.edu" },
]
readme = "README.md"
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
keywords = [
    "flake8",
]
requires-python = ">=3.8"
dependencies = [
    "flake8",
    "setuptools",
]

[dependency-groups]
dev = [
    "mypy",
    "pre-commit",
    "pytest",
    "pytest-cov",
    "ruff",
    "types-setuptools",
]

[project.urls]
Homepage = "https://github.com/tyleryep/flake8-future-annotations"

[project.entry-points."flake8.extension"]
FA = "flake8_future_annotations.checker:FutureAnnotationsChecker"

[build-system]
requires = [
    "setuptools>=61.2",
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
py-modules = [
    "flake8_future_annotations",
]
include-package-data = true
zip-safe = false
license-files = [
    "LICENSE",
]

[tool.setuptools.packages.find]
namespaces = false

[tool.setuptools.package-data]
flake8_future_annotations = [
    "py.typed",
]

[tool.mypy]
strict = true
warn_unreachable = true
disallow_any_unimported = true
extra_checks = true
enable_error_code = "ignore-without-code"

[[tool.mypy.overrides]]
module = [
    "tests.test_files.*",
]
ignore_errors = true

[tool.ruff]
target-version = "py38"
lint.select = ["ALL"]
lint.ignore = [
	"ANN401",  # Dynamically typed expressions (typing.Any) are disallowed
	"C901",    # function is too complex (12 > 10)
	"COM812",  # Trailing comma missing
	"D",       # Docstring rules
	"EM101",   # Exception must not use a string literal, assign to variable first
	"EM102",   # Exception must not use an f-string literal, assign to variable first
	"ERA001",  # Found commented-out code
	"FBT001",  # Boolean positional arg in function definition
	"FBT002",  # Boolean default value in function definition
	"FBT003",  # Boolean positional value in function call
	"FIX002",  # Line contains TODO
	"PLR0911", # Too many return statements (11 > 6)
	"PLR2004", # Magic value used in comparison, consider replacing 2 with a constant variable
	"PLR0912", # Too many branches
	"PLR0913", # Too many arguments to function call
	"PLR0915", # Too many statements
	"S101",    # Use of `assert` detected
	"S311",    # Standard pseudo-random generators are not suitable for cryptographic purposes
	"T201",    # print() found
	"T203",    # pprint() found
	"TD002",   # Missing author in TODO; try: `# TODO(<author_name>): ...`
	"TD003",   # Missing issue link on the line following this TODO
	"TD005",   # Missing issue description after `TODO`
	"TRY003",  # Avoid specifying long messages outside the exception class

	# flake8-future-annotations-specific ignores
	"N802", # Function name `visit_Import` should be lowercase
]
exclude = ["tests/test_files"]
